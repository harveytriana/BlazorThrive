@page "/fetchdata"
@using BlazorThrive.Shared
@using System.Text.Json;
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null) {
<p>@prompt</p>
}
else {
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var forecast in forecasts) {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
    </tbody>
</table>
}

@code {
    WeatherForecast[] forecasts;

    string prompt = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        try {
            var js = await Http.GetStringAsync("WeatherForecast");
            var so = new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase };
            forecasts = JsonSerializer.Deserialize<WeatherForecast[]>(js, so);

            // forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        }
        catch (Exception e) {
            prompt = $"Exception: {e.Message}";
        }

    }

}
