@page "/books"
@using System.Text.Json;
@inject HttpClient _hc
<h2>Books Store</h2>

<p>This component demonstrates fetching data from the server.</p>

@if (books == null) {
<pre>@prompt</pre>
}
else {
    <table class="table" style="font-family:Courier New, Courier, monospace">
        <thead>
            <tr>
                <th>Author</th>
                <th>Title</th>
                <th>Price</th>
                <th>Stock</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in books) {
                <tr>
                    <td>@i.Author</td>
                    <td>@i.Name</td>
                    <td>@i.Price</td>
                    <td>@i.InStock</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    record Book(string Id, string Name, string Author, bool InStock, decimal Price, DateTime CreationDate);

    Book[] books;

    string prompt = "Loading...", js;

    protected override async Task OnInitializedAsync()
    {
        try {
            // with validate
            js = await _hc.GetStringAsync("api/Books");
            if (Utils.IsJson(js)) {
                var so = new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase };
                books = JsonSerializer.Deserialize<Book[]>(js, so);
            }
            else {
                // server respond with html error due to...
                prompt = "the resource 'api/Books' is not found.";
            }
            // normal
            // books = await _hc.GetFromJsonAsync<Book[]>("api/Books");
        }
        catch (Exception e) {
            prompt = $"Exception: {e.Message}\n\njs? {(js == null ? "null" : js)}";
        }

    }


}
